"""
### **Exerc√≠cio: Gerenciador de Arquivos Simples**

**Descri√ß√£o:**  
Voc√™ deve criar um script Python que permita ao usu√°rio realizar as seguintes tarefas:
1. Criar um novo diret√≥rio com um nome fornecido pelo usu√°rio.
2. Listar todos os arquivos e diret√≥rios dentro do diret√≥rio atual.
3. Verificar se um arquivo ou diret√≥rio espec√≠fico existe no caminho atual.
4. Renomear um arquivo ou diret√≥rio existente.

**Requisitos:**
- Use fun√ß√µes da biblioteca `os` para implementar cada uma das opera√ß√µes.
- Interaja com o usu√°rio por meio de entradas (`input`) e sa√≠das (`print`).
- Certifique-se de tratar poss√≠veis erros, como tentar renomear um arquivo que n√£o existe.

**Etapas sugeridas:**
1. Pergunte ao usu√°rio qual opera√ß√£o ele deseja realizar (criar diret√≥rio, listar conte√∫do, verificar exist√™ncia ou renomear).
2. Implemente cada opera√ß√£o em uma fun√ß√£o separada para manter o c√≥digo organizado.
3. Ao final de cada opera√ß√£o, pergunte ao usu√°rio se ele deseja realizar outra tarefa ou encerrar o programa.

---

### **Dicas:**
- Use `os.mkdir()` para criar diret√≥rios.
- Use `os.listdir()` para listar arquivos e diret√≥rios.
- Use `os.path.exists()` para verificar a exist√™ncia de um arquivo ou diret√≥rio.
- Use `os.rename()` para renomear arquivos ou diret√≥rios.
- Use `try` e `except` para lidar com poss√≠veis erros, como tentar acessar um diret√≥rio inexistente.

---

### **Exemplo de Fluxo do Programa:**
```
Bem-vindo ao Gerenciador de Arquivos!
Escolha uma opera√ß√£o:
1 - Criar diret√≥rio
2 - Listar conte√∫do do diret√≥rio atual
3 - Verificar exist√™ncia de arquivo/diret√≥rio
4 - Renomear arquivo/diret√≥rio
Digite sua escolha: 1
Digite o nome do novo diret√≥rio: documentos
Diret√≥rio 'documentos' criado com sucesso!
Deseja realizar outra opera√ß√£o? (s/n): s
...
```

---

Agora √© sua vez! Tente implementar o script sozinho. Se precisar de ajuda ou quiser conferir a solu√ß√£o depois, estou aqui para ajudar. Boa pr√°tica! üöÄ
"""
import os

# print(os.getcwd())

def criar_dir(nome):
    os.mkdir(nome)
    if not os.path.exists(nome):
        print("Erro na cria√ß√£o do diretorio.")
        return
    else:
        print(f"Diret√≥rio '{nome}' criado com sucesso!")

def listar_arquivos(dir_atual):
    if not os.listdir(dir_atual):
        raise ValueError("ERR: O diret√≥rio est√° vazio.")
    for item in os.listdir(dir_atual):
        item_path = os.path.join(dir_atual, item)
        if os.path.isdir(item_path):
            print(f'[DIR] {item}')
        elif os.path.isfile(item_path):
            print(f'[FILE] {item}')

def verificar_existencia(nome_arquivo):
    if not os.path.exists(nome_arquivo):
    # if not os.path.isfile(nome_arquivo): # se fosse para verificar apenas de um arquivo
        print(f'O arquivo "{nome_arquivo} n√£o est√° no diretorio {os.path.dirname(os.getcwd())}."')
        return
    print(f'O arquivo "{nome_arquivo}" est√° no diret√≥rio {os.path.dirname(os.getcwd())}')
    return

def renomear_arquivo(nome_atual, novo_nome):
    if not os.path.exists(nome_atual):
        print(f'O arquivo "{nome_atual} n√£o est√° no diretorio {os.getcwd()}."')
        return
    if os.path.isdir(nome_atual):
        os.rename(nome_atual, novo_nome)
        print(f"O diret√≥rio foi renomeado com sucesso de '{nome_atual}' para '{novo_nome}.'")
        return

    os.rename(nome_atual, novo_nome)
    print(f"O arquivo foi renomeado com sucesso de '{nome_atual}' para '{novo_nome}.'")
    return

# criar_dir('periferia')
# print(os.path.dirname(os.getcwd()))  # '/caminho/para'


def menu():
    while True:
        try:
            print('-'* 20)
            print('Explorador de arquivos')
            print('1. Criar diretorio')
            print('2. Listar arquivos')
            print('3. Verificar existencia de diret√≥rio/arquivo')
            print('4. Renomear arquivo/diret√≥rio')
            print('5. Sair')
            escolha = int(input("O que voc√™ deseja fazer? "))
        except ValueError as er:
            print(er)
            
        match escolha:
            case 1:
                nome_dir = input("Qual nome do diret√≥rio que voc√™ deseja criar?")
                criar_dir(nome_dir)
                # return
            case 2:
                listar_arquivos('C:/Users/User/Desktop/python/teste_dir')
                # return
            case 3:
                nome_dir = input("Qual nome do diret√≥rio que voc√™ deseja verificar se existe?")
                verificar_existencia(nome_dir)
                # return
            case 4:
                nome_atual = input("Qual √© o nome atual do arquivo que voc√™ deseja renomear?")
                nome_novo = input("Qual novo nome?")
                renomear_arquivo(nome_atual, nome_novo)
                # return
            case 5:
                print("Obrigado por usar o Explorador de arquivos")
                break
            
if __name__ == '__main__':
    os.chdir('C:/Users/User/Desktop/python/teste_dir')
    menu()
